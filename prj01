# how many twin primes are bigger than 1000 but smaller than 1000000? 
#and what is the biggest twin prime?
import numpy as np
import pandas as pd
import math
def isPrime(n):
    for i in range(2, int(math.sqrt(n))+1):
        if(n % i ==0):
            return False
    return True
# The function isPrime is designed to judge whether a number is prime or not.
# within(2,int(sqrt(n))+1), if there exist at least one number that can be divisible by n, then, this means n is not a prime(return False). If it does not exist any number that can be divisible by n, it means that n is a prime (return True).

count=0
twins=[]
for i in range(1000,1000001):
    flagone = isPrime(i)
    flagtwo = isPrime(i+2)
    if flagone == True and flagtwo == True:
        count=count+1
        twin=[i,i+2]
        twins.append(twin)
print(count)
print(twins[-1])
# As the question asked, for n in 1000 to 1000000, using the function "isPrime", the out come shows that there are 8134 pairs of twin prime, and the largest one is [999959,999961]

print('There are %d twin primes are bigger than 1000 but smaller than 1000000'% count)
print('The biggest twin prime is',twins[-1])

the CoCalc link (MY Python Code and the result) is:
https://cocalc.com/share/3a792dee-4d21-4d26-939c-9c2c52f09ab8/2018-10-02-prj01-MA6628.ipynb?viewer=share



Thanks!

